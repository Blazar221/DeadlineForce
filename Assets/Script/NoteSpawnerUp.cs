using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class NoteSpawnerUp : MonoBehaviour
{
    [SerializeField] 
    private GameObject note;

    private GameObject newNote;
    private SpriteRenderer rend;
    private Vector3 spawnPos;
    private Note nodeHandler; 

    private float[,] time = new float[,]
    {
        {0, 0}, {12.75f, 12.75f}, {12.9f, 12.9f}, {13.05f, 13.05f}, {13.2f, 13.2f}, {13.5f, 13.5f}, {13.8f, 13.8f}, {14.4f, 14.4f}, {14.7f, 14.7f}, {15.0f, 15.0f}, {15.3f, 15.3f}, {15.6f, 15.6f}, {15.75f, 15.75f}, {15.9f, 15.9f}, {16.05f, 16.05f}, {16.2f, 16.2f}, {16.35f, 16.35f}, {16.5f, 16.5f}, {16.65f, 16.65f}, {16.8f, 16.8f}, {16.95f, 16.95f}, {17.1f, 17.1f}, {17.25f, 17.25f}, {17.4f, 17.4f}, {17.55f, 17.55f}, {17.7f, 17.7f}, {17.85f, 17.85f}, {18.0f, 18.0f}, {18.15f, 18.15f}, {18.3f, 18.3f}, {18.45f, 18.45f}, {18.6f, 18.6f}, {18.75f, 18.75f}, {18.9f, 18.9f}, {19.05f, 19.05f}, {19.2f, 19.2f}, {19.35f, 19.35f}, {19.5f, 19.5f}, {19.65f, 19.65f}, {19.8f, 19.8f}, {19.95f, 19.95f}, {20.1f, 20.1f}, {20.25f, 20.25f}, {20.4f, 20.4f}, {20.55f, 20.55f}, {20.7f, 20.7f}, {20.85f, 20.85f}, {21.0f, 21.0f}, {30.9f, 30.9f}, {31.2f, 31.2f}, {31.35f, 31.35f}, {31.5f, 31.5f}, {31.65f, 31.65f}, {31.8f, 31.8f}, {31.95f, 31.95f}, {32.1f, 32.1f}, {32.25f, 32.25f}, {32.4f, 32.4f}, {32.55f, 32.55f}, {32.7f, 32.7f}, {32.85f, 32.85f}, {33.0f, 33.0f}, {33.15f, 33.15f}, {33.3f, 33.3f}, {33.45f, 33.45f}, {33.6f, 33.6f}, {33.75f, 33.75f}, {33.9f, 33.9f}, {34.05f, 34.05f}, {34.2f, 34.2f}, {34.35f, 34.35f}, {34.5f, 34.5f}, {34.65f, 34.65f}, {34.8f, 34.8f}, {34.95f, 34.95f}, {35.1f, 35.1f}, {35.25f, 35.25f}, {35.4f, 35.4f}, {35.7f, 35.7f}, {35.85f, 35.85f}, {36.0f, 36.0f}, {36.15f, 36.15f}, {36.3f, 36.3f}, {36.45f, 36.45f}, {36.6f, 36.6f}, {36.75f, 36.75f}, {36.9f, 36.9f}, {37.2f, 37.2f}, {37.35f, 37.35f}, {37.5f, 37.5f}, {37.65f, 37.65f}, {37.8f, 37.8f}, {37.95f, 37.95f}, {38.1f, 38.1f}, {38.25f, 38.25f}, {38.4f, 38.4f}, {38.7f, 38.7f}, {39.0f, 39.0f}, {39.3f, 39.3f}, {39.45f, 39.45f}, {39.6f, 40.5f}, {48.9f, 48.9f}, {49.2f, 49.2f}, {49.5f, 49.5f}, {49.8f, 49.8f}, {50.1f, 50.1f}, {50.25f, 50.25f}, {50.4f, 50.7f}, {51.0f, 51.0f}, {51.15f, 51.15f}, {51.3f, 51.3f}, {51.45f, 51.45f}, {51.6f, 51.6f}, {51.9f, 51.9f}, {52.2f, 52.5f}, {52.8f, 52.8f}, {53.1f, 53.1f}, {53.4f, 53.7f}, {54.0f, 54.0f}, {54.15f, 54.15f}, {54.3f, 54.3f}, {54.45f, 54.45f}, {54.6f, 54.6f}, {54.75f, 54.75f}, {54.9f, 54.9f}, {55.05f, 55.05f}, {55.2f, 55.2f}, {55.35f, 55.35f}, {55.5f, 55.5f}, {55.65f, 55.65f}, {55.8f, 55.8f}, {55.95f, 55.95f}, {56.1f, 56.1f}, {56.25f, 56.25f}, {56.4f, 56.4f}, {56.55f, 56.55f}, {56.7f, 56.7f}, {56.85f, 56.85f}, {57.0f, 57.0f}, {57.15f, 57.15f}, {57.3f, 57.3f}, {57.45f, 57.45f}, {57.6f, 57.6f}, {57.75f, 57.75f}, {57.9f, 57.9f}, {58.05f, 58.05f}, {58.2f, 58.2f}, {58.35f, 58.35f}, {58.5f, 58.5f}, {58.65f, 58.65f}, {58.8f, 58.8f}, {58.95f, 58.95f}, {59.1f, 59.1f}, {59.25f, 59.25f}, {59.4f, 59.7f}, {60.0f, 60.3f}, {69.3f, 69.3f}, {69.45f, 69.45f}, {69.6f, 69.9f}, {70.2f, 70.2f}, {70.35f, 70.35f}, {70.5f, 70.5f}, {70.65f, 70.65f}, {70.8f, 70.8f}, {71.1f, 71.1f}, {71.4f, 71.7f}, {72.0f, 72.0f}, {72.3f, 72.3f}, {72.6f, 72.9f}, {73.2f, 73.2f}, {73.35f, 73.35f}, {73.5f, 73.5f}, {73.65f, 73.65f}, {73.8f, 73.8f}, {73.95f, 73.95f}, {74.1f, 74.1f}, {74.25f, 74.25f}, {74.4f, 74.4f}, {74.55f, 74.55f}, {74.7f, 74.7f}, {74.85f, 74.85f}, {75.0f, 75.0f}, {75.15f, 75.15f}, {75.3f, 75.3f}, {75.45f, 75.45f}, {75.6f, 75.6f}, {75.75f, 75.75f}, {75.9f, 75.9f}, {76.05f, 76.05f}, {76.2f, 76.2f}, {76.35f, 76.35f}, {76.5f, 76.5f}, {76.65f, 76.65f}, {76.8f, 76.8f}, {76.95f, 76.95f}, {77.1f, 77.1f}, {77.25f, 77.25f}, {77.4f, 77.4f}, {77.55f, 77.55f}, {77.7f, 77.7f}, {77.85f, 77.85f}, {78.0f, 78.0f}, {78.15f, 78.15f}, {78.3f, 78.3f}, {78.45f, 78.45f}, {78.6f, 78.6f}, {88.5f, 88.5f}, {88.8f, 88.8f}, {88.95f, 88.95f}, {89.1f, 89.1f}, {89.25f, 89.25f}, {89.4f, 89.4f}, {89.55f, 89.55f}, {89.7f, 89.7f}, {89.85f, 89.85f}, {90.0f, 90.0f}, {90.15f, 90.15f}, {90.3f, 90.3f}, {90.45f, 90.45f}, {90.6f, 90.6f}, {90.75f, 90.75f}, {90.9f, 90.9f}, {91.05f, 91.05f}, {91.2f, 91.2f}, {91.35f, 91.35f}, {91.5f, 91.5f}, {91.65f, 91.65f}, {91.8f, 91.8f}, {91.95f, 91.95f}, {92.1f, 92.1f}, {92.25f, 92.25f}, {92.4f, 92.4f}, {92.55f, 92.55f}, {92.7f, 92.7f}, {92.85f, 92.85f}, {93.0f, 93.0f}, {93.3f, 93.3f}, {93.45f, 93.45f}, {93.6f, 93.6f}, {93.75f, 93.75f}, {93.9f, 93.9f}, {94.05f, 94.05f}, {94.2f, 94.2f}, {94.35f, 94.35f}, {94.5f, 94.5f}, {94.8f, 94.8f}, {94.95f, 94.95f}, {95.1f, 95.1f}, {95.25f, 95.25f}, {95.4f, 95.4f}, {95.55f, 95.55f}, {95.7f, 95.7f}, {95.85f, 95.85f}, {96.0f, 96.0f}, {96.3f, 96.3f}, {96.6f, 96.6f}, {96.9f, 96.9f}, {97.05f, 97.05f}, {107.95f, 107.95f}, {107.7f, 107.7f}, {108.0f, 108.0f}, {108.15f, 108.15f}, {108.3f, 108.3f}, {108.45f, 108.45f}, {108.6f, 108.6f}, {108.75f, 108.75f}, {108.9f, 108.9f}, {109.05f, 109.05f}, {109.2f, 109.2f}, {109.35f, 109.35f}, {109.5f, 109.5f}, {109.65f, 109.65f}, {109.8f, 109.8f}, {109.95f, 109.95f}, {110.1f, 110.1f}, {110.25f, 110.25f}, {110.4f, 110.4f}, {110.55f, 110.55f}, {110.7f, 110.7f}, {110.85f, 110.85f}, {111.0f, 111.0f}, {111.15f, 111.15f}, {111.3f, 111.3f}, {111.45f, 111.45f}, {111.6f, 111.6f}, {111.75f, 111.75f}, {111.9f, 111.9f}, {112.05f, 112.05f}, {112.2f, 112.2f}, {112.35f, 112.35f}, {112.5f, 112.5f}, {112.65f, 112.65f}, {112.8f, 112.8f}, {112.95f, 112.95f}, {113.1f, 113.1f}, {113.25f, 113.25f}, {113.4f, 113.4f}, {113.55f, 113.55f}, {113.7f, 113.7f}, {113.85f, 113.85f}, {114.0f, 114.0f}, {114.15f, 114.15f}, {114.3f, 114.3f}, {114.45f, 114.45f}, {114.6f, 114.6f}, {114.75f, 114.75f}, {114.9f, 114.9f}, {115.05f, 115.05f}, {115.2f, 115.2f}, {126.9f, 126.9f}, {127.2f, 127.2f}, {127.35f, 127.35f}, {127.5f, 127.5f}, {127.65f, 127.65f}, {127.8f, 127.8f}, {127.95f, 127.95f}, {128.1f, 128.1f}, {128.25f, 128.25f}, {128.4f, 128.4f}, {128.55f, 128.55f}, {128.7f, 128.7f}, {128.85f, 128.85f}, {129.0f, 129.0f}, {129.15f, 129.15f}, {129.3f, 129.3f}, {129.45f, 129.45f}, {129.6f, 129.6f}, {129.75f, 129.75f}, {129.9f, 129.9f}, {130.05f, 130.05f}, {130.2f, 130.2f}, {130.35f, 130.35f}, {130.5f, 130.5f}, {130.65f, 130.65f}, {130.8f, 130.8f}, {130.95f, 130.95f}, {131.1f, 131.1f}, {131.25f, 131.25f}, {131.4f, 131.4f}, {131.55f, 131.55f}, {131.7f, 131.7f}, {131.85f, 131.85f}, {132.0f, 132.0f}, {132.15f, 132.15f}, {132.3f, 132.3f}, {132.45f, 132.45f}, {132.6f, 132.6f}, {132.75f, 132.75f}, {132.9f, 132.9f}, {133.05f, 133.05f}, {133.2f, 133.2f}, {133.35f, 133.35f}, {133.5f, 133.5f}, {133.65f, 133.65f}, {133.8f, 133.8f}, {133.95f, 133.95f}, {134.1f, 134.1f}, {134.25f, 134.25f}, {134.4f, 134.4f}, {134.7f, 134.7f}, {135.0f, 135.0f}
    };

    private void Awake()
    {
        nodeHandler = note.GetComponent<Note>();
    }

    // Start is called before the first frame update
    void Start()
    {
        StartCoroutine(SpawnNewBlock(time));
    }

    private IEnumerator SpawnNewBlock(float[,] timeArr)
    {
        int len = timeArr.Length, ind = 1;
        while (ind < len)
        {
            yield return new WaitForSeconds(timeArr[ind, 0]-timeArr[ind-1, 0]);
            Debug.Log("Note Up:" + time[ind, 0]);
            spawnPos = new Vector3(13, 4, 0);
            newNote = Instantiate(note, spawnPos, Quaternion.identity);
            if (timeArr[ind, 1] - timeArr[ind, 0] != 0)
            {
                //Debug.Log("length: " + (timeArr[ind, 1]-timeArr[ind, 0])/nodeHandler.speed);
                newNote.transform.localScale =
                    new Vector3((timeArr[ind, 1]-timeArr[ind, 0])/nodeHandler.speed, nodeHandler.transform.localScale.y, 0);
            }
            rend = newNote.GetComponent<SpriteRenderer>();
            ind++;
        }
    }
}
